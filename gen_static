#!/usr/bin/env perl

use strict;
use warnings;

use Config::Grammar;
use Getopt::Std;
use File::Copy;
use PriceChart;
use Template;
use URI::Escape;


my %args;
getopts("v", \%args);

$| = 1 if ($args{v});

my $cfg = get_config();
my $dbh = get_dbh($cfg->{http}, undef, $args{v});

my $work_dir =  $cfg->{http}{chroot} . $cfg->{http}{htdocs};
print "info: working dir: $work_dir\n" if ($args{v});

# rock a new template
my $config = {
	INTERPOLATE => 1,
	POST_CHOMP => 1,
	EVAL_PERL => 1,
	INCLUDE_PATH => "$work_dir/tt",
	OUTPUT_PATH => $work_dir
};
my $template = Template->new($config)
	|| die Template->error() . "\n";

# manufacturers.html, manufacturers/*
my $manufacturers_sql = "select distinct manufacturer from products";
my $parts_sql = "select part_num, lower(manufacturer), description from products where manufacturer = ?";
my $m = gen_link_page($manufacturers_sql, $parts_sql, "manufacturers", "Manufacturers");

# vendors.html, vendors/*
my $vendor_sql = "select distinct vendor from prices";
$parts_sql = "select distinct part_num from prices where vendor = ?";
my $v = gen_link_page($vendor_sql, $parts_sql, "vendors", "Retailers");

# products.html, products/*
my $product_sql = "select part_num from products";
$parts_sql = "select part_num, lower(manufacturer), description from products where part_num = ?";
my $p = gen_link_page($product_sql, $parts_sql, "products", "Products");

# get a list of products added within the last week
my $time = time - (7 * 24 * 60 * 60);
my $sql = "select manufacturer, part_num, lower(part_num) from products where first_seen > $time";
my $new_products = $dbh->selectall_arrayref($sql);

# index.html
my $n = @$new_products;
my $vars = {
	num_vendors => $v,
	num_manufacturers => $m,
	num_products => $p,
	num_new => $n,
	new_products => $new_products,
};
$template->process("index.tt", $vars, "index.html")
	|| die "template: " . $template->error() . "\n";

print "info: $m manufacturers, $p products ($n new), $v vendors\n" if ($args{v});
$dbh->disconnect();

# generate a page of links to pages of products
sub gen_link_page
{
	my $type_sql = shift;
	my $parts_sql = shift;
	my $dir_prefix = shift;
	my $case_normal = shift;

	xmkdir "$work_dir/$dir_prefix";

	my $results = $dbh->selectall_arrayref($type_sql);
	my @manicured_list;
	for my $result (@$results) {
		$result = $result->[0];
		my $result_lc = lc($result);

		my $part_nums = $dbh->selectall_arrayref($parts_sql, undef, $result);
		printf("info: $dir_prefix/$result_lc.html:\t%i products\n",
			scalar @$part_nums) if ($args{v});

		my $vars = {
			name => $dir_prefix,
			products => $part_nums,
		};
		$template->process("chart_list.tt", $vars,
			"$dir_prefix/$result_lc.html"); # error checking!

		push @manicured_list, [$result, $result_lc];
	}

	my $vars = {
		name => $case_normal,
		name_lc => $dir_prefix,
		num_manufacturers => scalar @manicured_list,
		manufacturers => \@manicured_list,
	};
	print "info: $dir_prefix.html\n" if ($args{v});
	$template->process("link_list.tt", $vars, "$dir_prefix.html")
		|| die "template: " . $template->error() . "\n";

	return scalar @manicured_list;
}
